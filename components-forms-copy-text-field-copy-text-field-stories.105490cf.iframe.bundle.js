"use strict";(self.webpackChunk_parksandresorts_core=self.webpackChunk_parksandresorts_core||[]).push([[1396],{"./src/hooks/use-copy-to-clipboard.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{m:()=>useCopyToClipboard});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js");function _slicedToArray(arr,i){return function _arrayWithHoles(arr){if(Array.isArray(arr))return arr}(arr)||function _iterableToArrayLimit(r,l){var t=null==r?null:"undefined"!=typeof Symbol&&r[Symbol.iterator]||r["@@iterator"];if(null!=t){var e,n,i,u,a=[],f=!0,o=!1;try{if(i=(t=t.call(r)).next,0===l){if(Object(t)!==t)return;f=!1}else for(;!(f=(e=i.call(t)).done)&&(a.push(e.value),a.length!==l);f=!0);}catch(r){o=!0,n=r}finally{try{if(!f&&null!=t.return&&(u=t.return(),Object(u)!==u))return}finally{if(o)throw n}}return a}}(arr,i)||function _unsupportedIterableToArray(o,minLen){if(!o)return;if("string"==typeof o)return _arrayLikeToArray(o,minLen);var n=Object.prototype.toString.call(o).slice(8,-1);"Object"===n&&o.constructor&&(n=o.constructor.name);if("Map"===n||"Set"===n)return Array.from(o);if("Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return _arrayLikeToArray(o,minLen)}(arr,i)||function _nonIterableRest(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function _arrayLikeToArray(arr,len){(null==len||len>arr.length)&&(len=arr.length);for(var i=0,arr2=new Array(len);i<len;i++)arr2[i]=arr[i];return arr2}var useCopyToClipboard=function useCopyToClipboard(textToCopy){var _useState2=_slicedToArray((0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(!1),2),copied=_useState2[0],setCopied=_useState2[1];return(0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)((function(){if(copied){var timeout=setTimeout((function(){setCopied(!1)}),3e3);return function(){return clearTimeout(timeout)}}}),[copied]),{copied,copyToClipboard:function copyToClipboard(){if(navigator.clipboard&&window.isSecureContext)navigator.clipboard.writeText(textToCopy),setCopied(!0);else{var textarea=document.createElement("textarea");textarea.value=textToCopy,document.body.appendChild(textarea),textarea.select(),document.execCommand("copy"),document.body.removeChild(textarea)}}}}},"./src/components/forms/copy-text-field/copy-text-field.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Primary:()=>Primary,__namedExportsOrder:()=>__namedExportsOrder,default:()=>copy_text_field_stories});var use_copy_to_clipboard=__webpack_require__("./src/hooks/use-copy-to-clipboard.ts"),input_field=__webpack_require__("./src/components/forms/input-field/input-field.tsx"),es=__webpack_require__("./node_modules/react-i18next/dist/es/index.js"),jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js"),CopyTextField=function CopyTextField(_ref){var text=_ref.text,confirmationText=_ref.confirmationText,t=(0,es.$G)().t,_useCopyToClipboard=(0,use_copy_to_clipboard.m)(text),copied=_useCopyToClipboard.copied,copyToClipboard=_useCopyToClipboard.copyToClipboard,textHasBeenCopiedConfirmationText=confirmationText||t("copied");return(0,jsx_runtime.jsx)(input_field.Z,{value:copied?textHasBeenCopiedConfirmationText:text,icon:"copy",readOnly:!0,onClick:function onClick(){copyToClipboard()},onKeyDown:function onKeyDown(event){"Enter"===event.key&&copyToClipboard()}})};CopyTextField.displayName="CopyTextField";const copy_text_field=CopyTextField;try{copytextfield.displayName="copytextfield",copytextfield.__docgenInfo={description:"",displayName:"copytextfield",props:{text:{defaultValue:null,description:"",name:"text",required:!0,type:{name:"string"}},confirmationText:{defaultValue:null,description:"",name:"confirmationText",required:!1,type:{name:"string"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/forms/copy-text-field/copy-text-field.tsx#copytextfield"]={docgenInfo:copytextfield.__docgenInfo,name:"copytextfield",path:"src/components/forms/copy-text-field/copy-text-field.tsx#copytextfield"})}catch(__react_docgen_typescript_loader_error){}const copy_text_field_stories={title:"Elements/Input Fields/Copy Text Field",component:copy_text_field};var Primary={args:{text:"some-email@email.com",confirmationText:"Mejladress kopierad ✅"}},__namedExportsOrder=["Primary"];Primary.parameters={...Primary.parameters,docs:{...Primary.parameters?.docs,source:{originalSource:'{\n  args: {\n    text: "some-email@email.com",\n    confirmationText: "Mejladress kopierad ✅"\n  }\n}',...Primary.parameters?.docs?.source}}}}}]);